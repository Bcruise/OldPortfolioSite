{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ben_c\\\\bootcamp\\\\portfoliositereact\\\\src\\\\components\\\\Projects.js\";\nimport React from \"react\";\nimport Header from './Header';\nimport IndProject from \"./IndProject\";\nimport headersInfo from '../data/headers.json';\nimport work from '../data/work.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet projectCarrier = '';\nheadersInfo.forEach(val => {\n  if (val.title === 'PROJECTS') {\n    projectCarrier = val;\n  }\n});\nfunction Projects() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: projectCarrier.title,\n      description: projectCarrier.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), work.forEach(val => {\n      /*#__PURE__*/_jsxDEV(IndProject, {\n        title: val.title,\n        image: val.image,\n        gitHubPagesURL: val.gitHubPagesURL,\n        gitHubRepoURL: val.gitHubRepoURL,\n        description: val.description,\n        techStack: val.techStack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true);\n}\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","Header","IndProject","headersInfo","work","jsxDEV","_jsxDEV","Fragment","_Fragment","projectCarrier","forEach","val","title","Projects","children","description","fileName","_jsxFileName","lineNumber","columnNumber","image","gitHubPagesURL","gitHubRepoURL","techStack","_c","$RefreshReg$"],"sources":["C:/Users/Ben_c/bootcamp/portfoliositereact/src/components/Projects.js"],"sourcesContent":["import React from \"react\";\r\nimport Header from './Header';\r\nimport IndProject from \"./IndProject\";\r\nimport headersInfo from '../data/headers.json';\r\nimport work from '../data/work.json';\r\nlet projectCarrier = '';\r\n\r\n\r\n\r\nheadersInfo.forEach(val => {\r\n    if (val.title === 'PROJECTS') {\r\n        projectCarrier = val;\r\n    }\r\n});\r\n\r\nfunction Projects() {\r\n  return (\r\n    <>\r\n      <Header title={projectCarrier.title} description={projectCarrier.description}/>\r\n      {work.forEach(val => {\r\n        <IndProject title={val.title} image={val.image} gitHubPagesURL={val.gitHubPagesURL} gitHubRepoURL={val.gitHubRepoURL} description={val.description} techStack={val.techStack}/>\r\n      })}\r\n    </>    \r\n  );\r\n}\r\n\r\nexport default Projects;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACrC,IAAIC,cAAc,GAAG,EAAE;AAIvBN,WAAW,CAACO,OAAO,CAACC,GAAG,IAAI;EACvB,IAAIA,GAAG,CAACC,KAAK,KAAK,UAAU,EAAE;IAC1BH,cAAc,GAAGE,GAAG;EACxB;AACJ,CAAC,CAAC;AAEF,SAASE,QAAQA,CAAA,EAAG;EAClB,oBACEP,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACER,OAAA,CAACL,MAAM;MAACW,KAAK,EAAEH,cAAc,CAACG,KAAM;MAACG,WAAW,EAAEN,cAAc,CAACM;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,EAC9Ef,IAAI,CAACM,OAAO,CAACC,GAAG,IAAI;MACnB,aAAAL,OAAA,CAACJ,UAAU;QAACU,KAAK,EAAED,GAAG,CAACC,KAAM;QAACQ,KAAK,EAAET,GAAG,CAACS,KAAM;QAACC,cAAc,EAAEV,GAAG,CAACU,cAAe;QAACC,aAAa,EAAEX,GAAG,CAACW,aAAc;QAACP,WAAW,EAAEJ,GAAG,CAACI,WAAY;QAACQ,SAAS,EAAEZ,GAAG,CAACY;MAAU;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IACjL,CAAC,CAAC;EAAA,gBACD;AAEP;AAACK,EAAA,GATQX,QAAQ;AAWjB,eAAeA,QAAQ;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}